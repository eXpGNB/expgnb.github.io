import{_ as a,c as i,o as s,ae as t}from"./chunks/framework.Dh1jimFm.js";const u=JSON.parse('{"title":"Stage 0: Setup","description":"","frontmatter":{},"headers":[],"relativePath":"roadmap/stages/stage-0.md","filePath":"roadmap/stages/stage-0.md"}'),n={name:"roadmap/stages/stage-0.md"};function l(o,e,r,h,c,d){return s(),i("div",null,e[0]||(e[0]=[t(`<h1 id="stage-0-setup" tabindex="-1">Stage 0: Setup <a class="header-anchor" href="#stage-0-setup" aria-label="Permalink to &quot;Stage 0: Setup&quot;">​</a></h1><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h2><p>There main requiremnents for running the gNodeB and UE within your own hardware are:-</p><h3 id="unix" tabindex="-1">Unix <a class="header-anchor" href="#unix" aria-label="Permalink to &quot;Unix&quot;">​</a></h3><ul><li>Any distribution of linux can be used to deploy both the <code>gNodeB</code> as well as the <code>UE</code></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The current version has only been tested out on ubuntu 22.04, thus although possible, there could be dependency issues in other distros</p></div><h3 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-label="Permalink to &quot;Docker&quot;">​</a></h3><ul><li>The core network will be deployed as docker container</li><li>Thus it is important to set up docker in your system</li><li>Refer to the <a href="https://docs.docker.com/engine/install/ubuntu/" target="_blank" rel="noreferrer">docker installation page</a> for installation</li></ul><h3 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;Git&quot;">​</a></h3><ul><li>As we will be relying on a few open-source libraries and services, <code>git</code> is required to use those libraries</li><li>On top of that, versioning your progress can also help in debugging if anything goes wrong</li></ul><h3 id="setup-a-working-directory" tabindex="-1">Setup a working directory <a class="header-anchor" href="#setup-a-working-directory" aria-label="Permalink to &quot;Setup a working directory&quot;">​</a></h3><ul><li>For the ease of use, let us create a common working directory, where we shall keep the configuration and other relevant files to our project</li><li>make a folder within the home directory of the user as follows</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> expgnb</span></span></code></pre></div><h3 id="openairinterface5g" tabindex="-1">Openairinterface5g <a class="header-anchor" href="#openairinterface5g" aria-label="Permalink to &quot;Openairinterface5g&quot;">​</a></h3><ul><li>OpenAirInterface5G (OAI) is an open-source software suite that implements key components of 4G and 5G mobile networks, including the core network (5GC), the base station (gNodeB), and user equipment (UE).</li><li>It provides a fully customizable and extensible framework for research, prototyping, and deployment of cellular networks.</li><li><a href="/setup/oai.html">click here</a> for build steps</li></ul><h3 id="clone-config-files" tabindex="-1">Clone config files <a class="header-anchor" href="#clone-config-files" aria-label="Permalink to &quot;Clone config files&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/expgnb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/expgnb/expgnb.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conf-files</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conf-files</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .git</span></span></code></pre></div><h3 id="uhd-drivers" tabindex="-1">UHD Drivers <a class="header-anchor" href="#uhd-drivers" aria-label="Permalink to &quot;UHD Drivers&quot;">​</a></h3><ul><li>Required to interface with USRP devices</li><li><a href="/setup/uhd.html">clieck here</a> for installation steps</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This can be skipped in the initial stage</p></div><h3 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">​</a></h3><ul><li>Once all the installation is completed, you are ready to move on to the rest of the stages</li></ul>`,22)]))}const k=a(n,[["render",l]]);export{u as __pageData,k as default};
